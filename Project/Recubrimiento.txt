RECUBRIMIENTO MÍNIMO
____________________

Modelo Original:
RT(t, l)=
	t = [a, b, c, d, e, f]
	l = [a.b -> c, d -> e.f, c -> a, b.e -> c, b.c -> d, c.f -> b.d, a.c.d -> b, c.e -> a.f]

Paso 1 Agregar Dependencias Elementales:

	Agregar dependencia elemental: a.b -> c
	Agregar dependencia elemental: d -> e
	Agregar dependencia elemental: d -> f
	Agregar dependencia elemental: c -> a
	Agregar dependencia elemental: b.e -> c
	Agregar dependencia elemental: b.c -> d
	Agregar dependencia elemental: c.f -> b
	Agregar dependencia elemental: c.f -> d
	Agregar dependencia elemental: a.c.d -> b
	Agregar dependencia elemental: c.e -> a
	Agregar dependencia elemental: c.e -> f

	l1 = [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]

Paso 2 Eliminar Atributos Extraños:

		Cierre(a) = [a] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(b) = [b] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(b) = [b] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(e) = [e] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(b) = [b] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(c) = [a, c] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(c) = [a, c] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(f) = [f] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(c) = [a, c] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(f) = [f] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(a, c) = [a, c] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(a, d) = [a, d, e, f] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(c, d) = [a, b, c, d, e, f] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
	Eliminar variable: a en a.c.d -> b
		Cierre(c) = [a, c] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
	Eliminar variable: e en c.e -> a
		Cierre(c) = [a, c] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]
		Cierre(e) = [e] para [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, a.c.d -> b, c.e -> a, c.e -> f]

	l2 = [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> b, c.f -> d, c.d -> b, c.e -> f]

Paso 3 Eliminar Dependencias Redundantes:

		Cierre(a, b) = [a, b] para [c.e -> f, c.d -> b, c.f -> d, c.f -> b, b.c -> d, b.e -> c, c -> a, d -> f, d -> e]
		Cierre(d) = [d, f] para [c.e -> f, c.d -> b, c.f -> d, c.f -> b, b.c -> d, b.e -> c, c -> a, d -> f, a.b -> c]
		Cierre(d) = [d, e] para [c.e -> f, c.d -> b, c.f -> d, c.f -> b, b.c -> d, b.e -> c, c -> a, d -> e, a.b -> c]
		Cierre(c) = [c] para [c.e -> f, c.d -> b, c.f -> d, c.f -> b, b.c -> d, b.e -> c, d -> f, d -> e, a.b -> c]
		Cierre(b, e) = [b, e] para [c.e -> f, c.d -> b, c.f -> d, c.f -> b, b.c -> d, c -> a, d -> f, d -> e, a.b -> c]
		Cierre(b, c) = [a, b, c] para [c.e -> f, c.d -> b, c.f -> d, c.f -> b, b.e -> c, c -> a, d -> f, d -> e, a.b -> c]
		Cierre(c, f) = [a, b, c, d, e, f] para [c.e -> f, c.d -> b, c.f -> d, b.c -> d, b.e -> c, c -> a, d -> f, d -> e, a.b -> c]
	Eliminar dependencia: c.f -> b
		Cierre(c, f) = [a, c, f] para [c.e -> f, c.d -> b, b.c -> d, b.e -> c, c -> a, d -> f, d -> e, a.b -> c]
		Cierre(c, d) = [a, c, d, e, f] para [c.e -> f, c.f -> d, b.c -> d, b.e -> c, c -> a, d -> f, d -> e, a.b -> c]
		Cierre(c, e) = [a, c, e] para [c.d -> b, c.f -> d, b.c -> d, b.e -> c, c -> a, d -> f, d -> e, a.b -> c]

	l3 = [a.b -> c, d -> e, d -> f, c -> a, b.e -> c, b.c -> d, c.f -> d, c.d -> b, c.e -> f]

